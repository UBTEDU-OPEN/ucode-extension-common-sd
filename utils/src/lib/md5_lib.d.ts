declare namespace _default {
    function hex_md5(s: any): string;
    function hex_md5(s: any): string;
    function b64_md5(s: any): string;
    function b64_md5(s: any): string;
    function str_md5(s: any): string;
    function str_md5(s: any): string;
    function hex_hmac_md5(key: any, data: any): string;
    function hex_hmac_md5(key: any, data: any): string;
    function b64_hmac_md5(key: any, data: any): string;
    function b64_hmac_md5(key: any, data: any): string;
    function str_hmac_md5(key: any, data: any): string;
    function str_hmac_md5(key: any, data: any): string;
    function md5_vm_test(): boolean;
    function md5_vm_test(): boolean;
    function core_md5(x: any, len: any): number[];
    function core_md5(x: any, len: any): number[];
    function md5_cmn(q: any, a: any, b: any, x: any, s: any, t: any): number;
    function md5_cmn(q: any, a: any, b: any, x: any, s: any, t: any): number;
    function md5_ff(a: any, b: any, c: any, d: any, x: any, s: any, t: any): number;
    function md5_ff(a: any, b: any, c: any, d: any, x: any, s: any, t: any): number;
    function md5_gg(a: any, b: any, c: any, d: any, x: any, s: any, t: any): number;
    function md5_gg(a: any, b: any, c: any, d: any, x: any, s: any, t: any): number;
    function md5_hh(a: any, b: any, c: any, d: any, x: any, s: any, t: any): number;
    function md5_hh(a: any, b: any, c: any, d: any, x: any, s: any, t: any): number;
    function md5_ii(a: any, b: any, c: any, d: any, x: any, s: any, t: any): number;
    function md5_ii(a: any, b: any, c: any, d: any, x: any, s: any, t: any): number;
    function core_hmac_md5(key: any, data: any): number[];
    function core_hmac_md5(key: any, data: any): number[];
    function safe_add(x: any, y: any): number;
    function safe_add(x: any, y: any): number;
    function bit_rol(num: any, cnt: any): number;
    function bit_rol(num: any, cnt: any): number;
    function str2binl(str: any): any[];
    function str2binl(str: any): any[];
    function binl2str(bin: any): string;
    function binl2str(bin: any): string;
    function binl2hex(binarray: any): string;
    function binl2hex(binarray: any): string;
    function binl2b64(binarray: any): string;
    function binl2b64(binarray: any): string;
    function generateRandomStr(size: any): string;
    function generateRandomStr(size: any): string;
}
export default _default;
